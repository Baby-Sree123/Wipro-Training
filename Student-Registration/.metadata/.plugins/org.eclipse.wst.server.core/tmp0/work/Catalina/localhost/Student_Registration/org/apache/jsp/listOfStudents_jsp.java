/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.97
 * Generated at: 2025-08-10 10:18:54 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import com.student.model.Student;

public final class listOfStudents_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(3);
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.student.model.Student");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

    List<Student> students = (List<Student>) request.getAttribute("students");

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <title>Students List</title>\r\n");
      out.write("    <style>\r\n");
      out.write("        body {\r\n");
      out.write("            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n");
      out.write("            background: #f0f2f5;\r\n");
      out.write("            padding: 30px 15px;\r\n");
      out.write("            color: #333;\r\n");
      out.write("        }\r\n");
      out.write("        h2 {\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            color: #34495e;\r\n");
      out.write("            margin-bottom: 30px;\r\n");
      out.write("            font-weight: 700;\r\n");
      out.write("        }\r\n");
      out.write("        .btn-add {\r\n");
      out.write("            display: block;\r\n");
      out.write("            width: max-content;\r\n");
      out.write("            margin: 0 auto 30px auto;\r\n");
      out.write("            background: #27ae60;\r\n");
      out.write("            padding: 12px 28px;\r\n");
      out.write("            color: white;\r\n");
      out.write("            font-weight: 600;\r\n");
      out.write("            border-radius: 25px;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            box-shadow: 0 6px 12px rgba(39, 174, 96, 0.3);\r\n");
      out.write("            transition: background-color 0.3s ease;\r\n");
      out.write("        }\r\n");
      out.write("        .btn-add:hover {\r\n");
      out.write("            background: #1e8449;\r\n");
      out.write("        }\r\n");
      out.write("        table {\r\n");
      out.write("            width: 90%;\r\n");
      out.write("            max-width: 900px;\r\n");
      out.write("            margin: 0 auto 50px auto;\r\n");
      out.write("            border-collapse: separate;\r\n");
      out.write("            border-spacing: 0 12px;\r\n");
      out.write("            background: white;\r\n");
      out.write("            box-shadow: 0 8px 20px rgba(0,0,0,0.1);\r\n");
      out.write("            border-radius: 12px;\r\n");
      out.write("            overflow: hidden;\r\n");
      out.write("        }\r\n");
      out.write("        th, td {\r\n");
      out.write("            padding: 16px 22px;\r\n");
      out.write("            text-align: left;\r\n");
      out.write("            color: #34495e;\r\n");
      out.write("        }\r\n");
      out.write("        th {\r\n");
      out.write("            background: #34495e;\r\n");
      out.write("            color: white;\r\n");
      out.write("            font-weight: 600;\r\n");
      out.write("            letter-spacing: 0.8px;\r\n");
      out.write("            font-size: 1rem;\r\n");
      out.write("        }\r\n");
      out.write("        tr {\r\n");
      out.write("            background: #fafafa;\r\n");
      out.write("            border-radius: 12px;\r\n");
      out.write("            box-shadow: inset 0 -1px 0 rgba(0,0,0,0.05);\r\n");
      out.write("            transition: background-color 0.25s ease;\r\n");
      out.write("        }\r\n");
      out.write("        tr:hover {\r\n");
      out.write("            background: #d5f0e1;\r\n");
      out.write("        }\r\n");
      out.write("        td:last-child {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            gap: 15px;\r\n");
      out.write("        }\r\n");
      out.write("        .btn {\r\n");
      out.write("            padding: 8px 18px;\r\n");
      out.write("            border-radius: 20px;\r\n");
      out.write("            color: white;\r\n");
      out.write("            font-size: 0.9rem;\r\n");
      out.write("            font-weight: 600;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            box-shadow: 0 3px 6px rgba(0,0,0,0.15);\r\n");
      out.write("            transition: background-color 0.3s ease;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            white-space: nowrap;\r\n");
      out.write("        }\r\n");
      out.write("        .btn-edit {\r\n");
      out.write("            background: #f39c12;\r\n");
      out.write("            box-shadow: 0 4px 8px rgba(243, 156, 18, 0.3);\r\n");
      out.write("        }\r\n");
      out.write("        .btn-edit:hover {\r\n");
      out.write("            background: #d68910;\r\n");
      out.write("        }\r\n");
      out.write("        .btn-delete {\r\n");
      out.write("            background: #e74c3c;\r\n");
      out.write("            box-shadow: 0 4px 8px rgba(231, 76, 60, 0.3);\r\n");
      out.write("        }\r\n");
      out.write("        .btn-delete:hover {\r\n");
      out.write("            background: #c0392b;\r\n");
      out.write("        }\r\n");
      out.write("        @media (max-width: 600px) {\r\n");
      out.write("            table, th, td {\r\n");
      out.write("                font-size: 0.85rem;\r\n");
      out.write("            }\r\n");
      out.write("            td:last-child {\r\n");
      out.write("                flex-direction: column;\r\n");
      out.write("                gap: 8px;\r\n");
      out.write("            }\r\n");
      out.write("            .btn {\r\n");
      out.write("                width: 100%;\r\n");
      out.write("                text-align: center;\r\n");
      out.write("            }\r\n");
      out.write("            .btn-add {\r\n");
      out.write("                width: 100%;\r\n");
      out.write("                padding: 14px 0;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <h2>Student List</h2>\r\n");
      out.write("    <a href=\"students?action=new\" class=\"btn-add\">Add New Student</a>\r\n");
      out.write("    <table>\r\n");
      out.write("        <tr>\r\n");
      out.write("            <th>ID</th>\r\n");
      out.write("            <th>Name</th>\r\n");
      out.write("            <th>Email</th>\r\n");
      out.write("            <th>Course</th>\r\n");
      out.write("            <th>Actions</th>\r\n");
      out.write("        </tr>\r\n");
      out.write("        ");
 if (students != null && !students.isEmpty()) {
            for (Student s : students) { 
      out.write("\r\n");
      out.write("            <tr>\r\n");
      out.write("                <td>");
      out.print( s.getId() );
      out.write("</td>\r\n");
      out.write("                <td>");
      out.print( s.getName() );
      out.write("</td>\r\n");
      out.write("                <td>");
      out.print( s.getEmail() );
      out.write("</td>\r\n");
      out.write("                <td>");
      out.print( s.getCourse() );
      out.write("</td>\r\n");
      out.write("                <td>\r\n");
      out.write("                    <a href=\"students?action=edit&id=");
      out.print( s.getId() );
      out.write("\" class=\"btn btn-edit\">Edit</a>\r\n");
      out.write("                    <a href=\"students?action=delete&id=");
      out.print( s.getId() );
      out.write("\" class=\"btn btn-delete\" onclick=\"return confirm('Are you sure you want to delete this student?');\">Delete</a>\r\n");
      out.write("                </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("        ");
  }
          } else { 
      out.write("\r\n");
      out.write("            <tr><td colspan=\"5\" style=\"text-align:center;\">No students found.</td></tr>\r\n");
      out.write("        ");
 } 
      out.write("\r\n");
      out.write("    </table>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
